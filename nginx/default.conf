tcp_nopush on;
gzip on;

js_path "/etc/nginx/njs/";
js_import flagship.js;
# Temporarily disable TLS/SSL Handshake verification (Upstream)
js_fetch_verify off;
# Set default DNS resolver
resolver 1.1.1.1;

server {
    # 1. Welcome, NGINX Listenoing http-only port. This is main server.
    listen 80;
    listen [::]:80;

    location / {
        # 2. To access all ressources here, an auth-like behavior is requested. Let's check Who is our user here
        auth_request /fs-experiences-subrequest;
        # 10. As a result, headers will be returned to me
        auth_request_set $experienceKey $upstream_http_x_fs_experiences;

        # 11. Now I can use it as cache criteria, and proceed
        proxy_set_header X-fs-experiences $experienceKey;

        # 12. Rest of a NGINX fine tuned config here ⤵️ - Thanks for reading.
        proxy_pass ${NGINX_UPSTREAM};
    }

    # 3. Here's our auth-like location, dedicated to us
    location /fs-experiences-subrequest {
        # 4. By the way, this request/process is not approriate on the outside internet, unless front-end signature checks
        internal;
        
        # 5. Triggering sub-request (allowing async behavior, simulating restart)
        proxy_pass http://0.0.0.0:8079;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        
        # 6. Wanna do some logging ?
        proxy_set_header X-Original-URI $request_uri;
    }

    # Nothing to see here ...
    location /favicon.ico {
        return 404 "";
    }
}

server {
    # 7. Hey, feel free to change port, ofc
    listen 8079;

    # 8. We need some info on the way
    set $fs_env_id ${FS_ENV_ID};
    set $fs_api_key ${FS_API_KEY};

    location / {
        # 9. That's what we seek ! Triggering async JS function, on NGINX
        # Thanks to this, will have the header x-fs-experience in return !
        js_content flagship.fetchExperienceCacheKey;
    }
}